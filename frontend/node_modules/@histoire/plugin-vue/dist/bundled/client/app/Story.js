import { defineComponent as m, getCurrentInstance as l, useAttrs as _, computed as $, provide as u, reactive as x, h as g, cloneVNode as A } from "vue";
import { omitInheritStoryProps as C } from "@histoire/shared";
import I from "./Variant.js";
const R = m({
  // eslint-disable-next-line vue/multi-word-component-names
  name: "Story",
  __histoireType: "story",
  inheritAttrs: !1,
  props: {
    initState: {
      type: Function,
      default: null
    }
  },
  setup() {
    const p = l(), a = _(), f = $(() => a.story);
    u("story", f);
    const s = p.parent, c = {
      $data: s.data
    };
    function r(i, t) {
      typeof t == "function" || t != null && t.__file || typeof (t == null ? void 0 : t.render) == "function" || typeof (t == null ? void 0 : t.setup) == "function" || (c[i] = t);
    }
    for (const i in s.exposed)
      r(i, s.exposed[i]);
    for (const i in s.devtoolsRawSetupState)
      r(i, s.devtoolsRawSetupState[i]);
    u("implicitState", () => x({ ...c }));
    function d() {
      Object.assign(a.story, {
        slots: () => p.proxy.$slots
      });
    }
    return {
      story: f,
      updateStory: d
    };
  },
  render() {
    this.updateStory();
    const [p] = this.story.variants;
    if (p.id === "_default")
      return g(I, {
        variant: p,
        initState: this.initState,
        ...this.$attrs
      }, this.$slots);
    let a = 0;
    const f = (c) => {
      var d, i, t, y, h, S;
      const r = [];
      for (const o of c)
        if (((d = o.type) == null ? void 0 : d.__histoireType) === "variant") {
          const e = {};
          if (e.variant = this.story.variants[a], !e.variant)
            continue;
          !((i = o.props) != null && i.initState) && !((t = o.props) != null && t["init-state"]) && (e.initState = this.initState);
          for (const n in this.$attrs)
            typeof ((y = o.props) == null ? void 0 : y[n]) > "u" && (e[n] = this.$attrs[n]);
          for (const n in this.story)
            !C.includes(n) && typeof ((h = o.props) == null ? void 0 : h[n]) > "u" && (e[n] = this.story[n]);
          a++, r.push(A(o, e));
        } else
          (S = o.children) != null && S.length && (o.children = f(o.children)), r.push(o);
      return r;
    };
    let s = this.$slots.default();
    return s = f(s), s;
  }
});
export {
  R as default
};
